version: "3.3"

services:
  #dsock:
  #  image: elofun/nginx
  #  networks:
  #    - dsock
  #  volumes:
  #    - /var/run/docker.sock:/var/run/docker.sock
  #  environment:
  #    CONF: |
  #      user root;
  #      stream {
  #        server {
  #          listen 9000;
  #          proxy_pass unix:/var/run/docker.sock;
  #        }
  #      }
  #  deploy: 
  #    mode: global    
  #    placement:
  #      constraints:
  #        - node.role == manager
  traefik:
    image: traefik
    command:
      - --log.level=ERROR
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --providers.docker
  #    - --providers.docker.endpoint=tcp://dsock:9000
      - --providers.docker.exposedbydefault=false
      - --providers.docker.swarmmode=true
      - --providers.docker.network=traefik_public
      - --api
      - --api.dashboard=true
      #- --certificatesresolvers.leresolver.acme.caserver=https://acme-v02.api.letsencrypt.org/directory
      # update your email here
      #- --certificatesresolvers.leresolver.acme.email=kenkukhanh@gmail.com
      # Make sure the this file is available and permission is set correctly
      #- --certificatesresolvers.leresolver.acme.storage=/data/acme.json
      # - --certificatesresolvers.leresolver.acme.tlschallenge=true
    ports:
      - 80:80
      - 443:443
    networks:
      - public
      - dsock
    volumes:
      #- /var/run/docker.sock:/var/run/docker.sock:ro
      # Make sure the volume folder is created
      - traefik-data:/data
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == worker

      labels:
        # Dashboard
        - traefik.enable=true
        # Change the host url here
        - traefik.http.routers.traefik.rule=Host(`traefik.hocdevops.online`)
        - traefik.http.routers.traefik.service=api@internal
        - traefik.http.services.traefik.loadbalancer.server.port=8080
        - traefik.http.routers.traefik.tls.certresolver=leresolver
        - traefik.http.routers.traefik.entrypoints=websecure
        - traefik.http.routers.traefik.middlewares=authtraefik
        # Change the auth password here
        - traefik.http.middlewares.authtraefik.basicauth.users=admin:$$2y$$05$$S.yHR1sryX5ZvJQYY1suuO90c1e6m5Taualaid9slwSl1/baHuySK # user/password

        # global redirect to https
        - traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)
        - traefik.http.routers.http-catchall.entrypoints=web
        - traefik.http.routers.http-catchall.middlewares=redirect-to-https

        # middleware redirect
        # - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https

  my-app:
    image: containous/whoami:v1.3.0
    networks:
      - public
    command:
      - --port=8082 # Our service listens on 8082
    deploy:
      labels:
        - traefik.enable=true
        # Change the host url here
        - traefik.http.routers.my-app.rule=Host(`whoami.hocdevops.online`)
        - traefik.http.services.my-app.loadbalancer.server.port=8082
        - traefik.http.routers.my-app.entrypoints=websecure
        - traefik.http.routers.my-app.tls=true
        - traefik.http.routers.my-app.tls.certresolver=leresolver

networks:
  public:
    attachable: true
  dsock:

volumes:
  traefik-data:
